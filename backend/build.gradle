plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot & Web & JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // Jakarta
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.0.0"

    // Dev & Test
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'

    runtimeOnly 'org.postgresql:postgresql'
}

// Qクラスの出力先を IDE に認識させる
sourceSets {
    main {
        java {
            // QueryDSL Qクラスのデフォルト生成先を追加
            srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}

// 生成物は annotationProcessor に任せるため、generateQueryDSL タスクは削除
// compileJava.dependsOn や clean タスクでの削除も不要

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    mainClass = 'com.example.myapp.MyApplication'
}

bootRun {
    // システムの環境変数をアプリケーションに引き継ぐ
    environment = System.getenv()
}
